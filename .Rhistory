group_by(state) %>%
mutate(total_votes = sum(votes),
percent = votes/total_votes) %>%
#filter(percent >= 0.05) %>%
mutate(hare_quota = total_votes/n_of_seats,
party_quota = votes/hare_quota,
quota_seats = as.integer(party_quota),
remains = party_quota - quota_seats,
remains_seats = 0) %>%
mutate(remaining_seat = n_of_seats - sum(quota_seats))
nest_by(state, n_of_seats, total_votes, hare_quota, remaining_seats)
data_ready %>%
group_by(state) %>%
mutate(total_votes = sum(votes),
percent = votes/total_votes) %>%
#filter(percent >= 0.05) %>%
mutate(hare_quota = total_votes/n_of_seats,
party_quota = votes/hare_quota,
quota_seats = as.integer(party_quota),
remains = party_quota - quota_seats,
remains_seats = 0) %>%
mutate(remaining_seat = n_of_seats - sum(quota_seats)) %>%
ungroup() %>%
nest_by(state, n_of_seats, total_votes, hare_quota, remaining_seats)
data_ready %>%
group_by(state) %>%
mutate(total_votes = sum(votes),
percent = votes/total_votes) %>%
#filter(percent >= 0.05) %>%
mutate(hare_quota = total_votes/n_of_seats,
party_quota = votes/hare_quota,
quota_seats = as.integer(party_quota),
remains = party_quota - quota_seats,
remains_seats = 0) %>%
mutate(remaining_seat = n_of_seats - sum(quota_seats)) %>%
ungroup() %>%
nest_by(state, n_of_seats, total_votes, hare_quota, remaining_seat)
data_numbers <- data_ready %>%
group_by(state) %>%
mutate(total_votes = sum(votes),
percent = votes/total_votes) %>%
#filter(percent >= 0.05) %>%
mutate(hare_quota = total_votes/n_of_seats,
party_quota = votes/hare_quota,
quota_seats = as.integer(party_quota),
remains = party_quota - quota_seats,
remains_seats = 0) %>%
mutate(remaining_seat = n_of_seats - sum(quota_seats))
data_numbers
data_numbers %>%
select(state, party, remaining_seat) %>%
nest_by(state, remaining_seat) %>%
mutate(data2 = map2(data, remaining_seat, function(x,y) rep(x,3)[1:y])) %>%
unnest(data2) %>%
add_column(remains_seats = 0)
data_numbers %>%
select(state, party, remaining_seat) %>%
nest_by(state, remaining_seat) %>%
mutate(data = map2(data, remaining_seat, function(x,y) rep(x,3)[1:y])) %>%
unnest(data) %>%
add_column(remains_seats = 0)
data_numbers <- data_ready %>%
group_by(state) %>%
mutate(total_votes = sum(votes),
percent = votes/total_votes) %>%
#filter(percent >= 0.05) %>%
mutate(hare_quota = total_votes/n_of_seats,
party_quota = votes/hare_quota,
quota_seats = as.integer(party_quota),
remains = party_quota - quota_seats,
remains_seats = 0) %>%
mutate(remaining_seat = n_of_seats - sum(quota_seats)) %>%
ungroup()
data_numbers %>%
select(state, party, remaining_seat) %>%
nest_by(state, remaining_seat) %>%
mutate(data = map2(data, remaining_seat, function(x,y) rep(x,3)[1:y])) %>%
unnest(data) %>%
add_column(remains_seats = 0)
data_numbers
data_numbers %>%
select(state, party, remaining_seat) %>%
nest_by(state, remaining_seat) %>%
mutate(data = map2(data, remaining_seat, function(x,y) rep(x,3)[1:y])) %>%
unnest(data) %>%
add_column(remains_seats = 0)
data_numbers %>%
select(state, party, remaining_seat, remains) %>%
nest_by(state, remaining_seat) %>%
mutate(data = map2(data, remaining_seat, function(x,y) rep(x,3)[1:y])) %>%
unnest(data) %>%
add_column(remains_seats = 0)
data_numbers %>%
select(state, party, remaining_seat, remains) %>%
nest_by(state, remaining_seat) %>%
mutate(data = map2(data, remaining_seat, function(x,y) rep(x,3)[1:y])) %>%
unnest(data) %>%
add_column(remains_seats = 0)
data_numbers %>%
select(state, party, remaining_seat, remains)
data_numbers %>%
select(state, party, remaining_seat) %>%
nest_by(state, remaining_seat) %>%
mutate(data = map2(data, remaining_seat, function(x,y) rep(x,3)[1:y])) %>%
unnest(data) %>%
add_column(remains_seats = 0)
data_numbers
data_ready %>%
group_by(state) %>%
mutate(total_votes = sum(votes),
percent = votes/total_votes) %>%
#filter(percent >= 0.05) %>%
mutate(hare_quota = total_votes/n_of_seats,
party_quota = votes/hare_quota,
quota_seats = as.integer(party_quota),
remains = party_quota - quota_seats,
remains_seats = 0) %>%
mutate(remaining_seat = n_of_seats - sum(quota_seats)) %>%
ungroup() %>%
arrange(desc(remains), .by_group = T)
data_ready %>%
group_by(state) %>%
mutate(total_votes = sum(votes),
percent = votes/total_votes) %>%
#filter(percent >= 0.05) %>%
mutate(hare_quota = total_votes/n_of_seats,
party_quota = votes/hare_quota,
quota_seats = as.integer(party_quota),
remains = party_quota - quota_seats,
remains_seats = 0) %>%
mutate(remaining_seat = n_of_seats - sum(quota_seats)) %>%
arrange(desc(remains), .by_group = T)
data_numbers <- data_ready %>%
group_by(state) %>%
mutate(total_votes = sum(votes),
percent = votes/total_votes) %>%
#filter(percent >= 0.05) %>%
mutate(hare_quota = total_votes/n_of_seats,
party_quota = votes/hare_quota,
quota_seats = as.integer(party_quota),
remains = party_quota - quota_seats,
remains_seats = 0) %>%
mutate(remaining_seat = n_of_seats - sum(quota_seats)) %>%
arrange(desc(remains), .by_group = T) %>%
ungroup()
data_numbers %>%
select(state, party, remaining_seat) %>%
nest_by(state, remaining_seat) %>%
mutate(data = map2(data, remaining_seat, function(x,y) rep(x,3)[1:y])) %>%
unnest(data) %>%
add_column(remains_seats = 0)
remaining_list %>%
group_by(state) %>%
summarize(r_seats = sum(remains_seats))
remaining_list <- data_numbers %>%
select(state, party, remaining_seat) %>%
nest_by(state, remaining_seat) %>%
mutate(data = map2(data, remaining_seat, function(x,y) rep(x,3)[1:y])) %>%
unnest(data) %>%
add_column(remains_seats = 0)
remaining_list %>%
group_by(state) %>%
summarize(r_seats = sum(remains_seats))
remaining_list %>%
group_by(state, data) %>%
summarize(r_seats = sum(remains_seats))
remaining_list <- data_numbers %>%
select(state, party, remaining_seat) %>%
nest_by(state, remaining_seat) %>%
mutate(data = map2(data, remaining_seat, function(x,y) rep(x,3)[1:y])) %>%
unnest(data) %>%
add_column(remains_seats = 0) %>%
mutate(remains_seats = remains_seats+1)
remaining_list %>%
group_by(state, data) %>%
summarize(r_seats = sum(remains_seats))
remaining_list %>%
group_by(data) %>%
summarize(r_seats = sum(remains_seats))
remaining_list %>%
group_by(data) %>%
summarize(r_seats = sum(remains_seats)) %>%
rename('party' = 'data')
good_data_remains <- remaining_list %>%
group_by(data) %>%
summarize(r_seats = sum(remains_seats)) %>%
rename('party' = 'data')
data_numbers %>%
group_by(party) %>%
summarise(q_seats = sum(quota_seats))
data_numbers <- data_ready %>%
group_by(state) %>%
mutate(total_votes = sum(votes),
percent = votes/total_votes) %>%
#filter(percent >= 0.05) %>%
filter(party != 'autres') %>%
mutate(hare_quota = total_votes/n_of_seats,
party_quota = votes/hare_quota,
quota_seats = as.integer(party_quota),
remains = party_quota - quota_seats,
remains_seats = 0) %>%
mutate(remaining_seat = n_of_seats - sum(quota_seats)) %>%
arrange(desc(remains), .by_group = T) %>%
ungroup()
remaining_list <- data_numbers %>%
select(state, party, remaining_seat) %>%
nest_by(state, remaining_seat) %>%
mutate(data = map2(data, remaining_seat, function(x,y) rep(x,3)[1:y])) %>%
unnest(data) %>%
add_column(remains_seats = 0) %>%
mutate(remains_seats = remains_seats+1)
remaining_list
good_data_remains
remaining_list <- data_numbers %>%
select(state, party, remaining_seat) %>%
nest_by(state, remaining_seat) %>%
mutate(data = map2(data, remaining_seat, function(x,y) rep(x,3)[1:y])) %>%
unnest(data) %>%
add_column(remains_seats = 0) %>%
mutate(remains_seats = remains_seats+1)
good_data_remains <- remaining_list %>%
group_by(data) %>% # cna group by state fro mapping later for an anlysis for a state by state
summarize(r_seats = sum(remains_seats)) %>%
rename('party' = 'data')
good_data_remains
good_data_quota <- data_numbers %>%
group_by(party) %>%
summarise(q_seats = sum(quota_seats))
good_data_quota
good_data_all <- good_data_quota %>%
left_join(good_data_remains, by = 'party')
good_data_all
good_data_quota %>%
left_join(good_data_remains, by = 'party') %>%
replace_na(r_seats, 0)
good_data_quota %>%
left_join(good_data_remains, by = 'party') %>%
mutate(r_seats = zirou(r_seats))
good_data_all <- good_data_quota %>%
left_join(good_data_remains, by = 'party') %>%
mutate(r_seats = zirou(r_seats))
good_data_all <- good_data_quota %>%
left_join(good_data_remains, by = 'party') %>%
mutate(r_seats = zirou(r_seats),
total = sum(q_seats + r_seats))
good_data_all <- good_data_quota %>%
left_join(good_data_remains, by = 'party') %>%
mutate(r_seats = zirou(r_seats),
total_seats = sum(q_seats + r_seats))
good_data_all %>%
mutate(party = fct_reorder(party, total_seats)) %>%
ggplot() +
geom_col(aes(x = total_seats,
y = party))
good_data_all
good_data_all <- good_data_quota %>%
left_join(good_data_remains, by = 'party') %>%
mutate(r_seats = zirou(r_seats),
total_seats = q_seats + r_seats)
good_data_all %>%
mutate(party = fct_reorder(party, total_seats)) %>%
ggplot() +
geom_col(aes(x = total_seats,
y = party))
good_data_all %>%
mutate(party = fct_reorder(party, total_seats)) %>%
ggplot() +
geom_col(aes(x = total_seats,
y = party))+
scale_fill_brewer(labels = good_data_1$party, palette = 'Set1')
good_data_all %>%
mutate(party = fct_reorder(party, total_seats)) %>%
ggplot() +
geom_col(aes(x = total_seats,
y = party))+
scale_fill_brewer(labels = good_data_all$party, palette = 'Set1')
good_data_all %>%
mutate(party = fct_reorder(party, total_seats)) %>%
ggplot() +
geom_parliament(aes(seats = total_seats, fill = party)) +
scale_fill_brewer(labels = good_data_1$party, palette = 'Set1')
good_data_all %>%
mutate(party = fct_reorder(party, total_seats)) %>%
ggplot() +
geom_parliament(aes(seats = total_seats, fill = party)) +
scale_fill_brewer(labels = good_data_all$party, palette = 'Set1')
library(ggpol)
good_data_all %>%
mutate(party = fct_reorder(party, total_seats)) %>%
ggplot() +
geom_parliament(aes(seats = total_seats, fill = party)) +
scale_fill_brewer(labels = good_data_all$party, palette = 'Set1')
good_data_all
good_data_all %>% view()
good_data_all <- good_data_quota %>%
left_join(good_data_remains, by = 'party') %>%
mutate(r_seats = zirou(r_seats),
total_seats = q_seats + r_seats) %>%
filter(total_seats != 0)
good_data_all %>%
mutate(party = fct_reorder(party, total_seats)) %>%
ggplot() +
geom_col(aes(x = total_seats,
y = party))+
scale_fill_brewer(labels = good_data_all$party, palette = 'Set1')
good_data_all %>%
mutate(party = fct_reorder(party, total_seats)) %>%
ggplot() +
geom_parliament(aes(seats = total_seats, fill = party)) +
scale_fill_brewer(labels = good_data_all$party, palette = 'Set1')
good_data_all %>%
mutate(party = fct_reorder(party, total_seats)) %>%
ggplot() +
geom_parliament(aes(seats = total_seats, fill = party)) +
scale_fill_brewer(labels = good_data_all$party, palette = 'Spectral')
good_data_all %>%
mutate(party = fct_reorder(party, total_seats)) %>%
ggplot() +
geom_parliament(aes(seats = total_seats, fill = party)) +
scale_fill_viridis_b(labels = good_data_all$party)
good_data_all %>%
mutate(party = fct_reorder(party, total_seats)) %>%
ggplot() +
geom_parliament(aes(seats = total_seats, fill = party)) +
scale_fill_viridis_c(labels = good_data_all$party)
good_data_all %>%
mutate(party = fct_reorder(party, total_seats)) %>%
ggplot() +
geom_parliament(aes(seats = total_seats, fill = party)) +
scale_fill_viridis_a(labels = good_data_all$party)
good_data_all %>%
mutate(party = fct_reorder(party, total_seats)) %>%
ggplot() +
geom_parliament(aes(seats = total_seats, fill = party)) +
scale_fill_distiller(labels = good_data_all$party)
good_data_all %>%
mutate(party = fct_reorder(party, total_seats)) %>%
ggplot() +
geom_parliament(aes(seats = total_seats, fill = party)) +
scale_fill_gradient(labels = good_data_all$party)
good_data_all %>%
mutate(party = fct_reorder(party, total_seats)) %>%
ggplot() +
geom_parliament(aes(seats = total_seats, fill = party)) +
scale_fill_gradientn(labels = good_data_all$party)
good_data_all %>%
mutate(party = fct_reorder(party, total_seats)) %>%
ggplot() +
geom_parliament(aes(seats = total_seats, fill = party)) +
scale_fill_brewer(labels = good_data_all$party)
good_data_all %>%
mutate(party = fct_reorder(party, total_seats)) %>%
ggplot() +
geom_parliament(aes(seats = total_seats, fill = party))
good_data_all %>%
mutate(party = fct_reorder(party, total_seats)) %>%
ggplot() +
geom_parliament(aes(seats = total_seats, fill = party)) +
scale_fill_discrete(labels = good_data_all$party)
good_data_all %>%
mutate(party = fct_reorder(party, total_seats)) %>%
ggplot() +
geom_col(aes(x = total_seats,
y = party, fill = party))
good_data_all %>%
mutate(party = fct_reorder(party, total_seats)) %>%
ggplot() +
geom_col(aes(x = total_seats,
y = party, fill = party))+
scale_fill_manual(labels = good_data_all$total_seats)
good_data_all$total_seats
good_data_all %>%
mutate(party = fct_reorder(party, total_seats)) %>%
ggplot() +
geom_col(aes(x = total_seats,
y = party, fill = party))
good_data_all
sum(good_data_all$total_seats)
# Importing data
data <- readxl::read_xlsx('data/general_results_2019.xlsx')
seats <- readxl::read_xlsx('data/seats.xlsx')
# preparing data
data_clean <- data %>%
clean_names() %>%
mutate_all(.funs = zirou)
seats <-seats %>%
rename('state' = 'Circonscription',
'n_of_seats' = Sièges)
# keep in mind that the average number of candidate lists in each state is about 50+
# the data only captures the major candidates and aggregates the others in an other candidate
# if not payed attention to they can sweep in the election, we cant allow that lol
# Tidy up the data and join it with the seats data
data_ready <- data_clean %>%
pivot_longer(cols = afek_tounes:autres,
values_to = 'votes',
names_to = 'party') %>%
rename('state'='name_fr') %>%
left_join(seats, by = 'state')
# should I save this table for suture use?
# Calculations
data_numbers <- data_ready %>%
group_by(state) %>%
mutate(total_votes = sum(votes),
percent = votes/total_votes) %>%
#filter(percent >= 0.05) %>%
filter(party != 'autres') %>%
mutate(hare_quota = total_votes/n_of_seats,
party_quota = votes/hare_quota,
quota_seats = as.integer(party_quota),
remains = party_quota - quota_seats,
remains_seats = 0) %>%
mutate(remaining_seat = n_of_seats - sum(quota_seats)) %>%
arrange(desc(remains), .by_group = T) %>%
ungroup()
remaining_list <- data_numbers %>%
select(state, party, remaining_seat) %>%
nest_by(state, remaining_seat) %>%
mutate(data = map2(data, remaining_seat, function(x,y) rep(x,3)[1:y])) %>%
unnest(data) %>%
add_column(remains_seats = 0) %>%
mutate(remains_seats = remains_seats+1)
good_data_remains <- remaining_list %>%
group_by(data) %>% # cna group by state fro mapping later for an anlysis for a state by state
summarize(r_seats = sum(remains_seats)) %>%
rename('party' = 'data')
good_data_quota <- data_numbers %>%
group_by(party) %>%
summarise(q_seats = sum(quota_seats))
good_data_all <- good_data_quota %>%
left_join(good_data_remains, by = 'party') %>%
mutate(r_seats = zirou(r_seats),
total_seats = q_seats + r_seats) %>%
filter(total_seats != 0)
good_data_all %>%
mutate(party = fct_reorder(party, total_seats)) %>%
ggplot() +
geom_col(aes(x = total_seats,
y = party, fill = party))+
scale_fill_manual(labels = good_data_all$total_seats)
good_data_all %>%
mutate(party = fct_reorder(party, total_seats)) %>%
ggplot() +
geom_parliament(aes(seats = total_seats, fill = party)) +
scale_fill_discrete(labels = good_data_all$party)
# Importing data
data <- readxl::read_xlsx('data/general_results_2019.xlsx')
seats <- readxl::read_xlsx('data/seats.xlsx')
source('code/FUNCTIONS.R')
source('code/Infrastructure.R')
# preparing data
data_clean <- data %>%
clean_names() %>%
mutate_all(.funs = zirou)
seats <-seats %>%
rename('state' = 'Circonscription',
'n_of_seats' = Sièges)
# keep in mind that the average number of candidate lists in each state is about 50+
# the data only captures the major candidates and aggregates the others in an other candidate
# if not payed attention to they can sweep in the election, we cant allow that lol
# Tidy up the data and join it with the seats data
data_ready <- data_clean %>%
pivot_longer(cols = afek_tounes:autres,
values_to = 'votes',
names_to = 'party') %>%
rename('state'='name_fr') %>%
left_join(seats, by = 'state')
# should I save this table for suture use?
# Calculations
data_numbers <- data_ready %>%
group_by(state) %>%
mutate(total_votes = sum(votes),
percent = votes/total_votes) %>%
#filter(percent >= 0.05) %>%
filter(party != 'autres') %>%
mutate(hare_quota = total_votes/n_of_seats,
party_quota = votes/hare_quota,
quota_seats = as.integer(party_quota),
remains = party_quota - quota_seats,
remains_seats = 0) %>%
mutate(remaining_seat = n_of_seats - sum(quota_seats)) %>%
arrange(desc(remains), .by_group = T) %>%
ungroup()
remaining_list <- data_numbers %>%
select(state, party, remaining_seat) %>%
nest_by(state, remaining_seat) %>%
mutate(data = map2(data, remaining_seat, function(x,y) rep(x,3)[1:y])) %>%
unnest(data) %>%
add_column(remains_seats = 0) %>%
mutate(remains_seats = remains_seats+1)
good_data_remains <- remaining_list %>%
group_by(data) %>% # cna group by state fro mapping later for an anlysis for a state by state
summarize(r_seats = sum(remains_seats)) %>%
rename('party' = 'data')
good_data_quota <- data_numbers %>%
group_by(party) %>%
summarise(q_seats = sum(quota_seats))
good_data_all <- good_data_quota %>%
left_join(good_data_remains, by = 'party') %>%
mutate(r_seats = zirou(r_seats),
total_seats = q_seats + r_seats) %>%
filter(total_seats != 0)
good_data_all %>%
mutate(party = fct_reorder(party, total_seats)) %>%
ggplot() +
geom_col(aes(x = total_seats,
y = party, fill = party))+
scale_fill_manual(labels = good_data_all$total_seats)
good_data_all %>%
mutate(party = fct_reorder(party, total_seats)) %>%
ggplot() +
geom_parliament(aes(seats = total_seats, fill = party)) +
scale_fill_discrete(labels = good_data_all$party)
